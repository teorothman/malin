defmodule Malin.Repo.Migrations.CreateNotifications do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    create table(:notifications, primary_key: false, prefix: "accounts") do
      add :id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true

      add :inserted_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :user_id,
          references(:users,
            column: :id,
            name: "notifications_user_id_fkey",
            type: :uuid,
            prefix: "accounts",
            on_delete: :delete_all
          ),
          null: false

      add :post_id,
          references(:posts,
            column: :id,
            name: "notifications_post_id_fkey",
            type: :uuid,
            prefix: "posts",
            on_delete: :delete_all
          ),
          null: false
    end

    create index(:notifications, [:user_id], prefix: "accounts")
  end

  def down do
    drop_if_exists index(:notifications, [:user_id], prefix: "accounts")

    drop constraint(:notifications, "notifications_user_id_fkey", prefix: "accounts")

    drop constraint(:notifications, "notifications_post_id_fkey", prefix: "accounts")

    drop table(:notifications, prefix: "accounts")
  end
end
