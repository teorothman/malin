defmodule Malin.Repo.Migrations.AddContentTable do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    create table(:content_items, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true
      add :title, :text, null: false
      add :description, :text
      add :content_type, :text, null: false
      add :file_url, :text
      add :video_url, :text
      add :body, :text
      add :external_url, :text
      add :state, :text, null: false, default: "draft"
      add :published_at, :utc_datetime

      add :inserted_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :updated_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :author_id,
          references(:users,
            column: :id,
            name: "content_items_author_id_fkey",
            type: :uuid,
            prefix: "accounts"
          ),
          null: false
    end
  end

  def down do
    drop constraint(:content_items, "content_items_author_id_fkey")

    drop table(:content_items)
  end
end
