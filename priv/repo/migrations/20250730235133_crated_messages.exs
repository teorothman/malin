defmodule Malin.Repo.Migrations.CratedMessages do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    execute "CREATE SCHEMA IF NOT EXISTS messages"

    create table(:messages, primary_key: false, prefix: "messages") do
      add :id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true
      add :content, :text, null: false
      add :read_at, :utc_datetime

      add :inserted_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :updated_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :user_id,
          references(:users,
            column: :id,
            name: "messages_user_id_fkey",
            type: :uuid,
            prefix: "accounts"
          ),
          null: false
    end
  end

  def down do
    drop constraint(:messages, "messages_user_id_fkey", prefix: "messages")

    drop table(:messages, prefix: "messages")
  end
end
